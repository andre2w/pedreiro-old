plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.71'
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    jcenter()
}

configurations {
    acceptanceTestCompile.extendsFrom testCompile
    acceptanceTestRuntime.extendsFrom testRuntime
}

sourceSets {
    acceptanceTest {
        kotlin {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file("src/acceptanceTest/kotlin")
        }
        resources.srcDir file("src/acceptanceTest/kotlin")
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    runtimeOnly "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation "org.yaml:snakeyaml:1.26"

    testImplementation "org.junit.jupiter:junit-jupiter:5.6.1"
    testImplementation "io.mockk:mockk:1.9.3.kotlin12"
    testRuntimeOnly "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    testImplementation "org.assertj:assertj-core:3.11.1"

    acceptanceTestRuntime "org.yaml:snakeyaml:1.26"
    acceptanceTestImplementation "org.spekframework.spek2:spek-dsl-jvm:$spek_version"
    acceptanceTestImplementation "org.spekframework.spek2:spek-runner-junit5:$spek_version"
    acceptanceTestImplementation "org.assertj:assertj-core:3.11.1"
    acceptanceTestImplementation "io.mockk:mockk:1.9.3.kotlin12"

}


task acceptanceTest(type: Test) {
    testClassesDirs = sourceSets.acceptanceTest.output.classesDirs
    classpath = sourceSets.acceptanceTest.runtimeClasspath
    outputs.upToDateWhen { false }
}

check.dependsOn acceptanceTest
acceptanceTest.mustRunAfter test

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

test {
    useJUnitPlatform()
    testLogging {
        events("passed", "skipped", "failed")
    }
}
acceptanceTest {
    useJUnitPlatform {
        includeEngines 'spek2'
    }
}